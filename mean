#!/bin/bash
# program : mean
# purpose : calculate mean of a list of values
# execute : mean [sourcefile] [k=column]
# author  : Freddy Fikse, Interbull Centre
# comments: INFILE set without -i option can contain more than one value
#              in that case the test operation complains
#           test whether $CARG is a number could be included
# revision history:
#           a while ago: original code
#           13 mar 1998: added getopt part
#            9 feb 1998: add -w option
#           23 may 2000: add -m option (compute MSE)

# check for input parameters
set -- `getopt mi:c:w: $*`
if [ $? -ne 0 ]
then
  echo usage: ${0##*/} [-m] [-c column] [-i input_file] [-w label] input_file
  exit 1
fi

MSE="FALSE"
for i in $*
do
    case $i in
        -i) INFILE=$2; shift 2;;
        -c) CARG=$2; shift 2;;
        -w) LABEL=$2; shift 2;;
        -m) MSE="TRUE"; shift;;
        --) shift; break;;
    esac
done

if [ ! -r ${INFILE:=$*} ]
then
  echo ${0##*/}: file $INFILE does not exist or is not readable
  exit 2
fi

if [ ! ${CARG} ]
then
    CARG=1
fi

gawk -v k=${CARG} -v label=${LABEL} -v m=${MSE} '
BEGIN {
    # some initialization
    sum=0
    ssq=0
    c=0
    column=k

    # get initial values for min and max
    max=-10e10
    min=10e10
}

{
    sum+=$column
    ssq+=$column*$column
    if ($column>max) max=$column
    if ($column<min) min=$column
    c++
}

END {
  if (c!=0) {
    if (label != "") {
      if( m =="TRUE" ) {
        var=ssq/c
      }
      else {
        var=(ssq-sum*sum/c)/(c-1)
      }
      printf("%10s %10lg %10lg %10lg %10lg %10lg %10lg\n",
              substr(label,1,10),
              c,
              sum/c,
              var,
              sqrt((ssq-sum*sum/c)/(c-1)),
              min,
              max)
    }
    else {
      print "N   : ",c
      print "Mean: ",sum/c
      if( m =="TRUE" ) {
        print "MSE : ",ssq/c
      } else {
        print "Var : ",(ssq-sum*sum/c)/(c-1)
      }
      print "Std : ",sqrt((ssq-sum*sum/c)/(c-1))
      print "Min : ",min
      print "Max : ",max
    }
  }
}' ${INFILE}
